@import "../../shared/components/base/media-queries";
$logo-size: 60px;

// helper mixin
@mixin hamburger_tint(
  $color: #000,
  $tint_text: false,
  $labelselector: "+ label"
) {
  #{$labelselector} {
    i,
    &::before,
    &::after {
      background-color: $color;
    }
    @if $tint_text {
      span {
        color: $color;
      }
    }
  }
}

// main mixin
@mixin hamburger(
  $width: 32px,
  $thickness: 3px,
  $gap: 7px,
  $color: #000,
  $background: transparent,
  $tint_text: false,
  $radius: 0,
  $radius_background: 0,
  $anim: 0.25s,
  $labelselector: "+ label",
  $padding: 0,
  $text: "right",
  $style: false
) {
  $height: ($thickness * 3) + ($gap * 2);
  @if $background != transparent and $padding == 0 {
    $padding: round(($thickness + $gap) / 1.5);
  }
  display: none;
  #{$labelselector} {
    user-select: none;
    position: relative;
    display: inline-block;
    width: $width;
    height: $height;
    box-sizing: content-box;
    border: $padding solid transparent;
    z-index: 1050;
    line-height: $height;
    white-space: nowrap;
    background: $background;
    border-radius: $radius_background;
    span {
      display: inline-block;
      position: absolute;
      left: 100%;
      margin-top: 1px;
      transition: color $anim;
      margin-left: $padding;
      @if $text == false {
        display: none;
      } @else if $text == "left" {
        left: auto;
        right: 100%;
        margin-left: 0;
        margin-right: $padding;
      }
      &::before,
      &::after {
        content: "";
        display: inline-block;
        min-width: 10px;
        width: $width * 0.2;
      }
    }
    i,
    &::before,
    &::after {
      position: absolute;
      left: 0;
      display: block;
      will-change: transform, background-color;
      width: $width;
      height: $thickness;
      border-radius: $radius;
      transition: transform $anim, background-color $anim;
      backface-visibility: hidden;
      outline: 1px solid transparent; // Firefox jagged animation fix
    }
    i {
      top: $thickness + $gap;
      // hide text
      font-size: 0;
      color: transparent;
      line-height: 0;
      @if $style == "align-left" {
        max-width: $width * 0.75;
        transform-origin: 66% center;
      } @else if $style == "align-right" {
        max-width: $width * 0.75;
        margin-left: $width * 0.25;
        transform-origin: 33% center;
      }
    }
    &::before,
    &::after {
      content: "";
    }
    &::before {
      top: 0;
    }
    &::after {
      bottom: 0;
    }
    &:hover {
      cursor: pointer;
    }
  }
  &:checked {
    @if $anim != -1 {
      #{$labelselector} {
        i {
          transform: scaleX(0.001);
        }
        &::before {
          transform: translateY($gap + $thickness) rotate(45deg);
        }
        &::after {
          transform: translateY(-($gap + $thickness)) rotate(-45deg);
        }
      }
    }
  }
  @include hamburger_tint($color, $tint_text, $labelselector);
}

// Usage

#toggle-defaults {
  @include hamburger();
}

#toggle-custom-size {
  @include hamburger($width: 50px, $thickness: 1px, $gap: 16px);
}

#toggle-custom-animation {
  @include hamburger($anim: cubic-bezier(0.68, -0.55, 0.265, 1.55) 0.33s);
}

#toggle-tint {
  @include hamburger($color: crimson, $tint_text: true);
  &:checked {
    @include hamburger_tint($color: darkgrey, $tint_text: true);
    &:hover {
      @include hamburger_tint($color: blue, $tint_text: true);
    }
  }
  &:hover {
    @include hamburger_tint($color: green, $tint_text: true);
  }
}

#toggle-radius {
  @include hamburger(
    $width: 40px,
    $thickness: 6px,
    $color: coral,
    $radius: 6px
  );
}

#toggle-padding {
  @include hamburger($width: 24px, $thickness: 2px, $gap: 5px, $padding: 24px);
  &:hover {
    @include hamburger_tint(orange);
  }
}

#toggle-text-on-left {
  @include hamburger($text: left, $style: "align-right");
}

#toggle-text-on-right {
  @include hamburger($text: right, $style: "align-left");
}

#toggle-solid-background {
  @include hamburger(
    $background: #ff6347,
    $width: 17px,
    $thickness: 3px,
    $gap: 4px,
    $padding: 12px,
    $color: white,
    $radius_background: 50%
  );
}

#toggle-noanim {
  @include hamburger($anim: -1);
}

#toggle-above-dark-background {
  @include hamburger($color: white);
  &:checked {
    @include hamburger_tint($color: #293134, $tint_text: true);
  }
}

//  basic scss
.header {
  max-width: 1480px;
  width: 100vw;
  padding: 0 20px;
  display: flex;
  justify-content: space-between;
  align-items: center;

  &_logo {
    max-height: $logo-size;
    max-width: $logo-size;

    img {
      max-height: $logo-size;
      max-width: $logo-size;
      object-fit: contain;
      padding-right: 10px;
      width: 100%;
    }
  }

  &_title {
    font-weight: bold;
    padding-right: 10px;
  }
}

.nav-mobile {
  display: none;
  @include respond-above(sm) {
    display: flex;
    justify-content: space-between !important;
  }

  @include respond-below(sm) {
    &--opened {
        display: flex;
        justify-content: space-between !important;
        position: absolute;
        top: 0;
        left: 50%;
        transform: translate(-50%);
        width: 100vw;
        height: 100vh;
        background-color: #ff6347;
    }
  }
}

.menu-btn-mobile {
  @include respond-above(sm) {
    display: none;
  }
}
